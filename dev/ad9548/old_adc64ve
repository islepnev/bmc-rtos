// Profile 0 - Dedicated to Ref A (for 125/2 MHz)
const AD9548_Profile_regs PLL_Prof0_ADC64VE = {
    {0x0600, 0x1B},		// Priorities
    {0x0601, 0x00},		// Nominal reference period, Bits[7:0]
    {0x0602, 0x24},		// Nominal reference period, Bits[15:8]
    {0x0603, 0xF4},		// Nominal reference period, Bits[23:16]
    {0x0604, 0x00},		// Nominal reference period, Bits[31:24]
    {0x0605, 0x00},		// Nominal reference period, Bits[39:32]
    {0x0606, 0x00},		// Nominal reference period, Bits[47:40]
    {0x0607, 0x00},		// [1:0] Nominal reference period, Bits[49:48]
    {0x0608, 0xE8},		// Inner tolerance, Bits[7:0]
    {0x0609, 0x03},		// Inner tolerance, Bits[15:8]
    {0x060A, 0x00},		// [3:0] Inner tolerance, Bits[19:16]
    {0x060B, 0xE8},		// Outer tolerance, Bits[7:0]
    {0x060C, 0x03},		// Outer tolerance, Bits[5:8]
    {0x060D, 0x00},		// [3:0] Outer tolerance, Bits[19:16]
    {0x060E, 0x0A},		// Validation timer, Bits[7:0]
    {0x060F, 0x00},		// Validation timer, Bits[15:8]
    {0x0610, 0x0A},		// Redetect timer, Bits[7:0]
    {0x0611, 0x00},		// Redetect timer, Bits[15:8]
    {0x0612, 0x19},		// Alpha-0 coefficient linear, Bits[7:0]
    {0x0613, 0x9B},		// Alpha-0 coefficient linear, Bits[15:8]
    {0x0614, 0x05},		// [7:6] Alpha-2 coefficient exponent, Bits[1:0]; [5:0] Alpha-1 coefficient exponent, Bits[5:0]
    {0x0615, 0x30},		// [7:1] Beta-0 coefficient linear, Bits[6:0]; [0] Alpha-2 coefficient exponent, Bit 2
    {0x0616, 0x80},		// Beta-0 coefficient linear, Bits[14:7]
    {0x0617, 0x36},		// [6:2] Beta-1 coefficient exponent, Bits[4:0]; [1:0] Beta-0 coefficient linear, Bits[16:15]
    {0x0618, 0x4A},		// Gamma-0 coefficient linear, Bits[7:0]
    {0x0619, 0x51},		// Gamma-0 coefficient linear, Bits[15:8]
    {0x061A, 0x1B},		// [5:1] Gamma-1 coefficient exponent, Bits[4:0]; [0] Gamma-0 coefficient linear, Bit 16
    {0x061B, 0x3D},		// Delta-0 coefficient linear, Bits[7:0]
    {0x061C, 0x71},		// [7] Delta-1 coefficient exponent, Bit 0; [6:0] Delta-0 coefficient linear, Bits[14:8]
    {0x061D, 0x06},		// [7:4] Alpha-3 coefficient exponent, Bits[3:0]; [3:0] Delta-1 coefficient exponent, Bits[4:1]
    {0x061E, 0x1D},		// R, Bits[7:0]
    {0x061F, 0x00},		// R, Bits[15:8]
    {0x0620, 0x00},		// R, Bits[23:16]
    {0x0621, 0x00},		// [5:0] R, Bits[29:24]
    {0x0622, 0x3B},		// S, Bits[7:0]
    {0x0623, 0x00},		// S, Bits[15:8]
    {0x0624, 0x00},		// S, Bits[23:16]
    {0x0625, 0x00},		// [5:0] S, Bits[29:24]
    {0x0626, 0x00},		// V, Bits[7:0]
    {0x0627, 0x00},		// [7:4] U, Bits[3:0]; [1:0] V, Bits[9:8]
    {0x0628, 0x00},		// [5:0] U, Bits[9:4]
    {0x0629, 0x64},		// Phase lock threshold, Bits[7:0]
    {0x062A, 0x00},		// Phase lock threshold, Bits[15:8]
    {0x062B, 0x20},		// Phase lock fill rate, Bits[7:0]
    {0x062C, 0x44},		// Phase lock drain rate, Bits[7:0]
    {0x062D, 0x64},		// Frequency lock threshold, Bits[7:0]
    {0x062E, 0x00},		// Frequency lock threshold, Bits[15:8]
    {0x062F, 0x00},		// Frequency lock threshold, Bits[23:16]
    {0x0630, 0x20},		// Frequency lock fill rate, Bits[7:0]
    {0x0631, 0x44}		// Frequency lock drain rate, Bits[7:0]
};

// Profile 1 - Dedicated to Ref B (for 125/3 MHz)
const AD9548_Profile_regs PLL_Prof1_ADC64VE = {
    {0x0632, 0x00},		// Priorities
    {0x0633, 0x00},		// Nominal reference period, Bits[7:0]
    {0x0634, 0x36},		// Nominal reference period, Bits[15:8]
    {0x0635, 0x6E},		// Nominal reference period, Bits[23:16]
    {0x0636, 0x01},		// Nominal reference period, Bits[31:24]
    {0x0637, 0x00},		// Nominal reference period, Bits[39:32]
    {0x0638, 0x00},		// Nominal reference period, Bits[47:40]
    {0x0639, 0x00},		// [1:0] Nominal reference period, Bits[49:48]
    {0x063A, 0xC8},		// Inner tolerance, Bits[7:0]
    {0x063B, 0x00},		// Inner tolerance, Bits[15:8]
    {0x063C, 0x00},		// [3:0] Inner tolerance, Bits[19:16]
    {0x063D, 0x0A},		// Outer tolerance, Bits[7:0]
    {0x063E, 0x00},		// Outer tolerance, Bits[5:8]
    {0x063F, 0x00},		// [3:0] Outer tolerance, Bits[19:16]
    {0x0640, 0x0A},		// Validation timer, Bits[7:0]
    {0x0641, 0x00},		// Validation timer, Bits[15:8]
    {0x0642, 0x0A},		// Redetect timer, Bits[7:0]
    {0x0643, 0x00},		// Redetect timer, Bits[15:8]
    {0x0644, 0x19},		// Alpha-0 coefficient linear, Bits[7:0]
    {0x0645, 0x9B},		// Alpha-0 coefficient linear, Bits[15:8]
    {0x0646, 0x05},		// [7:6] Alpha-2 coefficient exponent, Bits[1:0]; [5:0] Alpha-1 coefficient exponent, Bits[5:0]
    {0x0647, 0x30},		// [7:1] Beta-0 coefficient linear, Bits[6:0]; [0] Alpha-2 coefficient exponent, Bit 2
    {0x0648, 0x80},		// Beta-0 coefficient linear, Bits[14:7]
    {0x0649, 0x36},		// [6:2] Beta-1 coefficient exponent, Bits[4:0]; [1:0] Beta-0 coefficient linear, Bits[16:15]
    {0x064A, 0x4A},		// Gamma-0 coefficient linear, Bits[7:0]
    {0x064B, 0x51},		// Gamma-0 coefficient linear, Bits[15:8]
    {0x064C, 0x1B},		// [5:1] Gamma-1 coefficient exponent, Bits[4:0]; [0] Gamma-0 coefficient linear, Bit 16
    {0x064D, 0x3D},		// Delta-0 coefficient linear, Bits[7:0]
    {0x064E, 0x71},		// [7] Delta-1 coefficient exponent, Bit 0; [6:0] Delta-0 coefficient linear, Bits[14:8]
    {0x064F, 0x06},		// [7:4] Alpha-3 coefficient exponent, Bits[3:0]; [3:0] Delta-1 coefficient exponent, Bits[4:1]
    {0x0650, 0x13},		// R, Bits[7:0]
    {0x0651, 0x00},		// R, Bits[15:8]
    {0x0652, 0x00},		// R, Bits[23:16]
    {0x0653, 0x00},		// [5:0] R, Bits[29:24]
    {0x0654, 0x3B},		// S, Bits[7:0]
    {0x0655, 0x00},		// S, Bits[15:8]
    {0x0656, 0x00},		// S, Bits[23:16]
    {0x0657, 0x00},		// [5:0] S, Bits[29:24]
    {0x0658, 0x00},		// V, Bits[7:0]
    {0x0659, 0x00},		// [7:4] U, Bits[3:0]; [1:0] V, Bits[9:8]
    {0x065A, 0x00},		// [5:0] U, Bits[9:4]
    {0x065B, 0x64},		// Phase lock threshold, Bits[7:0]
    {0x065C, 0x00},		// Phase lock threshold, Bits[15:8]
    {0x065D, 0x20},		// Phase lock fill rate, Bits[7:0]
    {0x065E, 0x44},		// Phase lock drain rate, Bits[7:0]
    {0x065F, 0x64},		// Frequency lock threshold, Bits[7:0]
    {0x0660, 0x00},		// Frequency lock threshold, Bits[15:8]
    {0x0661, 0x00},		// Frequency lock threshold, Bits[23:16]
    {0x0662, 0x20},		// Frequency lock fill rate, Bits[7:0]
    {0x0663, 0x44}		// Frequency lock drain rate, Bits[7:0]
};

// Profile 2 - Dedicated to Ref B (for 41.7/2 MHz)
const AD9548_Profile_regs PLL_Prof2_ADC64VE = {
    {0x0680, 0x00},		// Priorities
    {0x0681, 0x00},		// Nominal reference period, Bits[7:0]
    {0x0682, 0x6C},		// Nominal reference period, Bits[15:8]
    {0x0683, 0xDC},		// Nominal reference period, Bits[23:16]
    {0x0684, 0x02},		// Nominal reference period, Bits[31:24]
    {0x0685, 0x00},		// Nominal reference period, Bits[39:32]
    {0x0686, 0x00},		// Nominal reference period, Bits[47:40]
    {0x0687, 0x00},		// [1:0] Nominal reference period, Bits[49:48]
    {0x0688, 0xE8},		// Inner tolerance, Bits[7:0]
    {0x0689, 0x03},		// Inner tolerance, Bits[15:8]
    {0x068A, 0x00},		// [3:0] Inner tolerance, Bits[19:16]
    {0x068B, 0xC8},		// Outer tolerance, Bits[7:0]
    {0x068C, 0x00},		// Outer tolerance, Bits[5:8]
    {0x068D, 0x00},		// [3:0] Outer tolerance, Bits[19:16]
    {0x068E, 0x0A},		// Validation timer, Bits[7:0]
    {0x068F, 0x00},		// Validation timer, Bits[15:8]
    {0x0690, 0x0A},		// Redetect timer, Bits[7:0]
    {0x0691, 0x00},		// Redetect timer, Bits[15:8]
    {0x0692, 0x19},		// Alpha-0 coefficient linear, Bits[7:0]
    {0x0693, 0x9B},		// Alpha-0 coefficient linear, Bits[15:8]
    {0x0694, 0x05},		// [7:6] Alpha-2 coefficient exponent, Bits[1:0]; [5:0] Alpha-1 coefficient exponent, Bits[5:0]
    {0x0695, 0x30},		// [7:1] Beta-0 coefficient linear, Bits[6:0]; [0] Alpha-2 coefficient exponent, Bit 2
    {0x0696, 0x80},		// Beta-0 coefficient linear, Bits[14:7]
    {0x0697, 0x36},		// [6:2] Beta-1 coefficient exponent, Bits[4:0]; [1:0] Beta-0 coefficient linear, Bits[16:15]
    {0x0698, 0x4A},		// Gamma-0 coefficient linear, Bits[7:0]
    {0x0699, 0x51},		// Gamma-0 coefficient linear, Bits[15:8]
    {0x069A, 0x1B},		// [5:1] Gamma-1 coefficient exponent, Bits[4:0]; [0] Gamma-0 coefficient linear, Bit 16
    {0x069B, 0x3D},		// Delta-0 coefficient linear, Bits[7:0]
    {0x069C, 0x71},		// [7] Delta-1 coefficient exponent, Bit 0; [6:0] Delta-0 coefficient linear, Bits[14:8]
    {0x069D, 0x06},		// [7:4] Alpha-3 coefficient exponent, Bits[3:0]; [3:0] Delta-1 coefficient exponent, Bits[4:1]
    {0x069E, 0x09},		// R, Bits[7:0]
    {0x069F, 0x00},		// R, Bits[15:8]
    {0x06A0, 0x00},		// R, Bits[23:16]
    {0x06A1, 0x00},		// [5:0] R, Bits[29:24]
    {0x06A2, 0x3B},		// S, Bits[7:0]
    {0x06A3, 0x00},		// S, Bits[15:8]
    {0x06A4, 0x00},		// S, Bits[23:16]
    {0x06A5, 0x00},		// [5:0] S, Bits[29:24]
    {0x06A6, 0x00},		// V, Bits[7:0]
    {0x06A7, 0x00},		// [7:4] U, Bits[3:0]; [1:0] V, Bits[9:8]
    {0x06A8, 0x00},		// [5:0] U, Bits[9:4]
    {0x06A9, 0x10},		// Phase lock threshold, Bits[7:0]
    {0x06AA, 0x27},		// Phase lock threshold, Bits[15:8]
    {0x06AB, 0x20},		// Phase lock fill rate, Bits[7:0]
    {0x06AC, 0x44},		// Phase lock drain rate, Bits[7:0]
    {0x06AD, 0xF4},		// Frequency lock threshold, Bits[7:0]
    {0x06AE, 0x01},		// Frequency lock threshold, Bits[15:8]
    {0x06AF, 0x00},		// Frequency lock threshold, Bits[23:16]
    {0x06B0, 0x20},		// Frequency lock fill rate, Bits[7:0]
    {0x06B1, 0x44}		// Frequency lock drain rate, Bits[7:0]
};

// Profile 3 - Dedicated to Ref D (for 125/2 MHz)
const AD9548_Profile_regs PLL_Prof3_ADC64VE = {
    {0x06B2, 0x09},		// Priorities
    {0x06B3, 0x00},		// Nominal reference period, Bits[7:0]
    {0x06B4, 0x24},		// Nominal reference period, Bits[15:8]
    {0x06B5, 0xF4},		// Nominal reference period, Bits[23:16]
    {0x06B6, 0x00},		// Nominal reference period, Bits[31:24]
    {0x06B7, 0x00},		// Nominal reference period, Bits[39:32]
    {0x06B8, 0x00},		// Nominal reference period, Bits[47:40]
    {0x06B9, 0x00},		// [1:0] Nominal reference period, Bits[49:48]
    {0x06BA, 0xE8},		// Inner tolerance, Bits[7:0]
    {0x06BB, 0x03},		// Inner tolerance, Bits[15:8]
    {0x06BC, 0x00},		// [3:0] Inner tolerance, Bits[19:16]
    {0x06BD, 0xE8},		// Outer tolerance, Bits[7:0]
    {0x06BE, 0x03},		// Outer tolerance, Bits[5:8]
    {0x06BF, 0x00},		// [3:0] Outer tolerance, Bits[19:16]
    {0x06C0, 0x0A},		// Validation timer, Bits[7:0]
    {0x06C1, 0x00},		// Validation timer, Bits[15:8]
    {0x06C2, 0x0A},		// Redetect timer, Bits[7:0]
    {0x06C3, 0x00},		// Redetect timer, Bits[15:8]
    {0x06C4, 0x19},		// Alpha-0 coefficient linear, Bits[7:0]
    {0x06C5, 0x9B},		// Alpha-0 coefficient linear, Bits[15:8]
    {0x06C6, 0x05},		// [7:6] Alpha-2 coefficient exponent, Bits[1:0]; [5:0] Alpha-1 coefficient exponent, Bits[5:0]
    {0x06C7, 0x30},		// [7:1] Beta-0 coefficient linear, Bits[6:0]; [0] Alpha-2 coefficient exponent, Bit 2
    {0x06C8, 0x80},		// Beta-0 coefficient linear, Bits[14:7]
    {0x06C9, 0x36},		// [6:2] Beta-1 coefficient exponent, Bits[4:0]; [1:0] Beta-0 coefficient linear, Bits[16:15]
    {0x06CA, 0x4A},		// Gamma-0 coefficient linear, Bits[7:0]
    {0x06CB, 0x51},		// Gamma-0 coefficient linear, Bits[15:8]
    {0x06CC, 0x1B},		// [5:1] Gamma-1 coefficient exponent, Bits[4:0]; [0] Gamma-0 coefficient linear, Bit 16
    {0x06CD, 0x3D},		// Delta-0 coefficient linear, Bits[7:0]
    {0x06CE, 0x71},		// [7] Delta-1 coefficient exponent, Bit 0; [6:0] Delta-0 coefficient linear, Bits[14:8]
    {0x06CF, 0x06},		// [7:4] Alpha-3 coefficient exponent, Bits[3:0]; [3:0] Delta-1 coefficient exponent, Bits[4:1]
    {0x06D0, 0x1D},		// R, Bits[7:0]
    {0x06D1, 0x00},		// R, Bits[15:8]
    {0x06D2, 0x00},		// R, Bits[23:16]
    {0x06D3, 0x00},		// [5:0] R, Bits[29:24]
    {0x06D4, 0x3B},		// S, Bits[7:0]
    {0x06D5, 0x00},		// S, Bits[15:8]
    {0x06D6, 0x00},		// S, Bits[23:16]
    {0x06D7, 0x00},		// [5:0] S, Bits[29:24]
    {0x06D8, 0x00},		// V, Bits[7:0]
    {0x06D9, 0x00},		// [7:4] U, Bits[3:0]; [1:0] V, Bits[9:8]
    {0x06DA, 0x00},		// [5:0] U, Bits[9:4]
    {0x06DB, 0x64},		// Phase lock threshold, Bits[7:0]
    {0x06DC, 0x00},		// Phase lock threshold, Bits[15:8]
    {0x06DD, 0x20},		// Phase lock fill rate, Bits[7:0]
    {0x06DE, 0x44},		// Phase lock drain rate, Bits[7:0]
    {0x06DF, 0x64},		// Frequency lock threshold, Bits[7:0]
    {0x06E0, 0x00},		// Frequency lock threshold, Bits[15:8]
    {0x06E1, 0x00},		// Frequency lock threshold, Bits[23:16]
    {0x06E2, 0x20},		// Frequency lock fill rate, Bits[7:0]
    {0x06E3, 0x44}		// Frequency lock drain rate, Bits[7:0]
};

